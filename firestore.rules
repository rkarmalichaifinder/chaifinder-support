rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users for friend functionality
      
      // Allow friend request operations - users can update other users' documents for friend requests
      allow write: if request.auth != null && (
        request.auth.uid == userId || 
        // Allow updating incomingRequests array for friend requests
        (request.auth.uid != userId && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['incomingRequests', 'outgoingRequests', 'friends']))
      );
      
      // Allow access to subcollections under users
      match /{subcollection}/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        // Allow friend request subcollections
        allow read, write: if request.auth != null && (
          subcollection == "incomingFriendRequests" || 
          subcollection == "outgoingFriendRequests" || 
          subcollection == "friends"
        );
      }
    }
    
    // Allow authenticated users to read/write friend requests
    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read/write ratings
    match /ratings/{ratingId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read/write chai spots
    match /chaiFinder/{spotId} {
      allow read, write: if request.auth != null;
    }
  }
} 